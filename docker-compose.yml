version: "3.8"

services:
  food-order-app-postgres:
    image: postgres:15.3-alpine
    container_name: food-order-app-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${DATABASE}
    ports:
      - 5432:5432
    volumes:
      - ./backend/src/dataSource/queries/entrypoint.sql:/docker-entrypoint-initdb.d/db.sql
      - ./backend/data/postgres:/var/lib/postgresql/data
  food-order-app-postgres-pgadmin:
    image: dpage/pgadmin4:latest
    container_name: food-order-app-postgres-pgadmin
    restart: always
    depends_on:
      - food-order-app-postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 8080:80
    volumes:
      - ./backend/data/pgadmin:/var/lib/pgadmin
  food-order-app-backend:
    build:
      context: ./backend
    container_name: food-order-app-backend
    restart: always
    command: yarn start
    environment:
      - POSTGRES_HOST=${DATABASE_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=promo-${POSTGRES_USER}
      - POSTGRES_DB=${DATABASE}
      - POSTGRES_PORT=${DATABASE_PORT}
    depends_on:
      - food-order-app-postgres
    ports:
      - 5001:5001
  food-order-app-frontend:
    build:
      context: ./frontend
    container_name: food-order-app-frontend
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
  food-order-app-dashboard:
    build:
      context: ./dashboard
    container_name: food-order-app-dashboard
    ports:
      - 2000:2000
    volumes:
      - ./dashboard:/app
      - /app/node_modules
